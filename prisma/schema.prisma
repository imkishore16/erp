// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      Role     @default(user)
  avatar    String?
  posts     Post[]
  createdAt DateTime @default(now()) @db.Timestamp(3)
  updatedAt DateTime @updatedAt @db.Timestamp(3)
}

model Post {
  id        String   @id @default(uuid())
  name      String   @unique
  image     String
  user      User?    @relation(fields: [user_id], references: [id])
  user_id   String?
  createdAt DateTime @default(now()) @db.Timestamp(3)
  updatedAt DateTime @updatedAt @db.Timestamp(3)
}

enum Role {
  user
  admin
}

model State {
  id        String   @id @default(uuid())
  name    String 
}

model Customer {
  id        String   @id @default(uuid())
  name    String 
  enquiries      EnquiryRegister[] 
}

model Scope {
  id        String   @id @default(uuid())
  name    String 
  enquiries      EnquiryItem[] 

}

model Category {
  id        String   @id @default(uuid())
  name    String 
  enquiries EnquiryItem[]
}

model Material {
  id   String @id @default(uuid())
  name String @unique
  enquiries ItemDetailsMaterial[]
}


model EnquiryRegister {
  id        String   @id @default(uuid())
  
  customer    Customer  @relation(fields: [customerId], references: [id])
  customerId  String

  enquiryItems EnquiryItem[]
  
  EnquiryReference String

  customer_type CustomerType

  // quotation   Quotation?

}

model EnquiryItem {
  id        String   @id @default(uuid())
  date      DateTime
  month     Month
  description String
  drawingNumber String[]
  materials         ItemDetailsMaterial[]
  scope Scope @relation(fields: [scopeId],references: [id])
  scopeId String
  categoryId String
  category Category @relation(fields: [categoryId],references: [id])
  quantity Int
  enquiryId String
  enquiryItems EnquiryRegister @relation(fields: [enquiryId],references: [id])

  MFG Boolean @default(true)
  TEC Boolean @default(true)
  COM Boolean @default(true)
  SLNO Boolean @default(true)
  special_process Boolean

  status Status

  quotationItem QuotationItem? @relation(name: "EnquiryItemToQuotationItem")
}

model Quotation {
  id             String          @id @default(uuid()) //quotationNo
  quotationItems QuotationItem[]
  
}

model QuotationItem {
  id             String          @id @default(uuid())

  quotationId String
  quotation Quotation @relation(fields: [quotationId]  ,references: [id])
  quotationDate  DateTime

  enquiryItemId      String          @unique
  enquiryItem      EnquiryItem @relation(fields: [enquiryItemId], references: [id], name: "EnquiryItemToQuotationItem")

  // description    String          // Derived from EnquiryRegister
  // drawingNumber  String[]        // Derived from EnquiryRegister
  // material       String          // Derived from EnquiryRegister
  // scope          String          // Derived from EnquiryRegister
  // category       String          // Derived from EnquiryRegister
  // enquiryQty     Int             // Derived from EnquiryRegister
  // EnquiryReference String          // Derived from EnquiryRegister

  costPerEach    Float
  totalCost    Float        // total cost for this quotation = totalCost * quantity
  createdAt      DateTime        @default(now())
  remarks        String
}

model PurchaseOrderRegister{
  id        String   @id @default(uuid())

}

model ProcessPlan{
  id        String   @id @default(uuid())
}



enum Month {
  January 
  February
  March
  April
  May
  June 
  July 
  August 
  September
  October 
  November 
  December 
}

enum Status {
  Active
  Compeleted
}

enum CustomerType {
  New
  Old
}



model ItemDetailsMaterial {
  id                String              @id @default(uuid())
  enquiryItem   EnquiryItem     @relation(fields: [enquiryItemId], references: [id])
  enquiryItemId String
  material          Material            @relation(fields: [materialId], references: [id])
  materialId        String
  @@unique([enquiryItemId, materialId]) 
}